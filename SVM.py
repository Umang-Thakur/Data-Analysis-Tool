from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_SVM(object):
    def setupUi(self, SVM):
        SVM.setObjectName("SVM")
        SVM.setFixedSize(393, 225)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        SVM.setWindowIcon(icon)
        SVM.setStyleSheet("border-image: url(:/images/BackGround.jpg);")
        self.gridLayout = QtWidgets.QGridLayout(SVM)
        self.gridLayout.setObjectName("gridLayout")
        self.kernel = QtWidgets.QLabel(SVM)
        self.kernel.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.kernel.setScaledContents(True)
        self.kernel.setAlignment(QtCore.Qt.AlignCenter)
        self.kernel.setObjectName("kernel")
        self.gridLayout.addWidget(self.kernel, 0, 1, 1, 1)
        self.gamma = QtWidgets.QLabel(SVM)
        self.gamma.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.gamma.setAlignment(QtCore.Qt.AlignCenter)
        self.gamma.setObjectName("gamma")
        self.gridLayout.addWidget(self.gamma, 0, 2, 1, 2)
        self.decision_function_shape = QtWidgets.QLabel(SVM)
        self.decision_function_shape.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.decision_function_shape.setAlignment(QtCore.Qt.AlignCenter)
        self.decision_function_shape.setObjectName("decision_function_shape")
        self.gridLayout.addWidget(self.decision_function_shape, 0, 5, 1, 2)
        spacerItem = QtWidgets.QSpacerItem(16, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 7, 2, 1)
        spacerItem1 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 1, 0, 1, 1)
        self.kernellist = QtWidgets.QComboBox(SVM)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.kernellist.setFont(font)
        self.kernellist.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.kernellist.setObjectName("kernellist")
        self.kernellist.addItem("")
        self.kernellist.addItem("")
        self.kernellist.addItem("")
        self.kernellist.addItem("")
        self.kernellist.addItem("")
        self.gridLayout.addWidget(self.kernellist, 1, 1, 1, 1)
        self.gammalist = QtWidgets.QComboBox(SVM)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.gammalist.setFont(font)
        self.gammalist.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.gammalist.setObjectName("gammalist")
        self.gammalist.addItem("")
        self.gammalist.addItem("")
        self.gridLayout.addWidget(self.gammalist, 1, 2, 1, 3)
        self.decision_function_shapelist = QtWidgets.QComboBox(SVM)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.decision_function_shapelist.setFont(font)
        self.decision_function_shapelist.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.decision_function_shapelist.setObjectName("decision_function_shapelist")
        self.decision_function_shapelist.addItem("")
        self.decision_function_shapelist.addItem("")
        self.gridLayout.addWidget(self.decision_function_shapelist, 1, 5, 1, 2)
        spacerItem2 = QtWidgets.QSpacerItem(20, 22, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem2, 2, 3, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(28, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 3, 0, 1, 1)
        self.verbose = QtWidgets.QLabel(SVM)
        self.verbose.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.verbose.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.verbose.setObjectName("verbose")
        self.gridLayout.addWidget(self.verbose, 3, 1, 1, 1)
        self.verbosecheckBox = QtWidgets.QCheckBox(SVM)
        self.verbosecheckBox.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.verbosecheckBox.setText("")
        self.verbosecheckBox.setTristate(False)
        self.verbosecheckBox.setObjectName("verbosecheckBox")
        self.gridLayout.addWidget(self.verbosecheckBox, 3, 2, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(24, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem4, 3, 3, 1, 1)
        self.C = QtWidgets.QLabel(SVM)
        self.C.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.C.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.C.setObjectName("C")
        self.gridLayout.addWidget(self.C, 3, 4, 1, 2)
        self.CdoubleSpinBox = QtWidgets.QDoubleSpinBox(SVM)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.CdoubleSpinBox.setFont(font)
        self.CdoubleSpinBox.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.CdoubleSpinBox.setMaximum(1000.0)
        self.CdoubleSpinBox.setProperty("value", 1.0)
        self.CdoubleSpinBox.setObjectName("CdoubleSpinBox")
        self.gridLayout.addWidget(self.CdoubleSpinBox, 3, 6, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(16, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem5, 3, 7, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(28, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem6, 4, 0, 1, 1)
        self.probability = QtWidgets.QLabel(SVM)
        self.probability.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.probability.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.probability.setObjectName("probability")
        self.gridLayout.addWidget(self.probability, 4, 1, 1, 1)
        self.probabilitycheckBox = QtWidgets.QCheckBox(SVM)
        self.probabilitycheckBox.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.probabilitycheckBox.setText("")
        self.probabilitycheckBox.setObjectName("probabilitycheckBox")
        self.gridLayout.addWidget(self.probabilitycheckBox, 4, 2, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(24, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem7, 4, 3, 1, 1)
        self.max_iter = QtWidgets.QLabel(SVM)
        self.max_iter.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.max_iter.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.max_iter.setObjectName("max_iter")
        self.gridLayout.addWidget(self.max_iter, 4, 4, 1, 2)
        self.max_iterspinBox = QtWidgets.QSpinBox(SVM)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.max_iterspinBox.setFont(font)
        self.max_iterspinBox.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.max_iterspinBox.setMinimum(-100)
        self.max_iterspinBox.setMaximum(100)
        self.max_iterspinBox.setProperty("value", -1)
        self.max_iterspinBox.setObjectName("max_iterspinBox")
        self.gridLayout.addWidget(self.max_iterspinBox, 4, 6, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(16, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem8, 4, 7, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(28, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem9, 5, 0, 1, 1)
        self.Shrinking = QtWidgets.QLabel(SVM)
        self.Shrinking.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.Shrinking.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.Shrinking.setObjectName("Shrinking")
        self.gridLayout.addWidget(self.Shrinking, 5, 1, 1, 1)
        self.ShrinkingcheckBox = QtWidgets.QCheckBox(SVM)
        self.ShrinkingcheckBox.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.ShrinkingcheckBox.setText("")
        self.ShrinkingcheckBox.setChecked(True)
        self.ShrinkingcheckBox.setObjectName("ShrinkingcheckBox")
        self.gridLayout.addWidget(self.ShrinkingcheckBox, 5, 2, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(24, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem10, 5, 3, 1, 1)
        self.degree = QtWidgets.QLabel(SVM)
        self.degree.setStyleSheet("border-image: url(:/images/1WhiteTransparent.png);")
        self.degree.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.degree.setObjectName("degree")
        self.gridLayout.addWidget(self.degree, 5, 4, 1, 2)
        self.degreespinBox = QtWidgets.QSpinBox(SVM)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.degreespinBox.setFont(font)
        self.degreespinBox.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.degreespinBox.setMaximum(100)
        self.degreespinBox.setProperty("value", 3)
        self.degreespinBox.setObjectName("degreespinBox")
        self.gridLayout.addWidget(self.degreespinBox, 5, 6, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(16, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem11, 5, 7, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 22, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem12, 6, 3, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(179, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem13, 7, 0, 1, 4)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Restore = QtWidgets.QDialogButtonBox(SVM)
        self.Restore.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.Restore.setOrientation(QtCore.Qt.Horizontal)
        self.Restore.setStandardButtons(QtWidgets.QDialogButtonBox.RestoreDefaults)
        self.Restore.setCenterButtons(True)
        self.Restore.setObjectName("Restore")
        self.horizontalLayout.addWidget(self.Restore)
        self.Cancel = QtWidgets.QDialogButtonBox(SVM)
        self.Cancel.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);\n"
"")
        self.Cancel.setOrientation(QtCore.Qt.Horizontal)
        self.Cancel.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel)
        self.Cancel.setCenterButtons(True)
        self.Cancel.setObjectName("Cancel")
        self.horizontalLayout.addWidget(self.Cancel)
        self.Apply = QtWidgets.QDialogButtonBox(SVM)
        self.Apply.setStyleSheet("border-image: url(:/images/1WhiteBackground.jpg);")
        self.Apply.setOrientation(QtCore.Qt.Horizontal)
        self.Apply.setStandardButtons(QtWidgets.QDialogButtonBox.Apply)
        self.Apply.setCenterButtons(True)
        self.Apply.setObjectName("Apply")
        self.horizontalLayout.addWidget(self.Apply)
        self.gridLayout.addLayout(self.horizontalLayout, 7, 4, 1, 4)

        self.retranslateUi(SVM)
        self.Cancel.accepted.connect(SVM.accept)
        self.Cancel.rejected.connect(SVM.reject)
        QtCore.QMetaObject.connectSlotsByName(SVM)

        self.Restore.clicked.connect(self.reset)

    def reset(self):
        self.kernellist.setCurrentIndex(0)
        self.gammalist.setCurrentIndex(0)
        self.decision_function_shapelist.setCurrentIndex(0)
        self.CdoubleSpinBox.setValue(1)
        self.max_iterspinBox.setValue(-1)
        self.degreespinBox.setValue(3)
        self.verbosecheckBox.setChecked(False)
        self.probabilitycheckBox.setChecked(False)
        self.ShrinkingcheckBox.setChecked(True)

    def retranslateUi(self, SVM):
        _translate = QtCore.QCoreApplication.translate
        SVM.setWindowTitle(_translate("SVM", "SVM"))
        self.kernel.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Kernel</span></p></body></html>"))
        self.gamma.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Gamma</span></p></body></html>"))
        self.decision_function_shape.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Dec_Func_Shape</span></p></body></html>"))
        self.kernellist.setItemText(0, _translate("SVM", "rbf"))
        self.kernellist.setItemText(1, _translate("SVM", "linear"))
        self.kernellist.setItemText(2, _translate("SVM", "poly"))
        self.kernellist.setItemText(3, _translate("SVM", "sigmoid"))
        self.kernellist.setItemText(4, _translate("SVM", "precomputed"))
        self.gammalist.setItemText(0, _translate("SVM", "scale"))
        self.gammalist.setItemText(1, _translate("SVM", "auto"))
        self.decision_function_shapelist.setItemText(0, _translate("SVM", "ovr"))
        self.decision_function_shapelist.setItemText(1, _translate("SVM", "ovo"))
        self.verbose.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Verbose</span></p></body></html>"))
        self.C.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">C</span></p></body></html>"))
        self.probability.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Probability</span></p></body></html>"))
        self.max_iter.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Max_iter</span></p></body></html>"))
        self.Shrinking.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Shrinking</span></p></body></html>"))
        self.degree.setText(_translate("SVM", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Degree</span></p></body></html>"))
import Images_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle('Fusion')
    SVM = QtWidgets.QDialog()
    ui = Ui_SVM()
    ui.setupUi(SVM)
    SVM.show()
    sys.exit(app.exec_())
